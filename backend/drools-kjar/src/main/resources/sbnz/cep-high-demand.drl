package sbnz;

import pro.restommender.model.AuthenticatedUser;
import pro.restommender.event.LoginEvent;
import java.util.Date;
import pro.restommender.model.Reservation;
import pro.restommender.event.SearchEvent;

rule "High rate restaurant in high demand"
  when
    $reservation: Reservation($currentDiscount: discount, $restaurantId: restaurant.id, $restaurant: restaurant)
    $r1: ReservationEvent()
    $s1: SearchEvent()

    accumulate(
      $r2: ReservationEvent(
        this != $r1,
        restaurantId == $restaurantId,
        $discount: discount
      ) over window:time(10m), 
      $noReservations: count($r2),
      $avgDiscount: average($discount)
    )

    Number(intValue > 5) from accumulate(
      $s2: SearchEvent(
        this != $s1,
        reastaurantId == $restaurantId,
      ) over window:time(5m),
      $noSearches: count($s2),
    )

    // iz restaurant rate
    $rr: RelevantRestaurants($restaurants: relevantRestaurants)
    $num: Double(intValue >= 1) from accumulate(
        Restaurant(
            rate > 3 && rate <= 5.0,
            $r: rate
        ) from $restaurants,
        init(double count = 0;),
        action(count += $r;),
        result(count)
    )

    eval($noReservations + $noSearches * 0.5 > 18)
  then
    System.out.println("Restaurant with id: " + $restaurantId + " is in high demand");
end