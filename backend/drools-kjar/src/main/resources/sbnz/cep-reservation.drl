package sbnz;

import pro.restommender.model.Reservation;
import pro.restommender.model.AuthenticatedUser;
import pro.restommender.dto.Search;
import pro.restommender.event.ReservationEvent;
import java.util.Date;

rule "More than 5 new reservations in an hour from one user"
    when
        $user: AuthenticatedUser(blocked == false)
        $t1: ReservationEvent($cId: userId)
        Number(intValue >= 5) from accumulate(
            $t2: ReservationEvent(
                this != $t1,
                userId == $cId
                // this meets[5m] $t1
            ) over window:time(1m),
            count($t2)
        )
    then
        System.out.println("CEP --> Isti korisnik vise od 5 pokusaja dodavanja rezervacija.");
        modify($user) {setBlocked(true)}
        modify($user) {setBlockedDate(new Date())}
end

rule "More than 1 same reservation from one user in 1 hour"
    agenda-group "reservation-block"
    when
        $user: AuthenticatedUser(blocked == false, $userId: id)
        $reservation: Reservation($restaurantId: restaurant.id, $numOfPersons: numOfPersons)
        Number(intValue > 1) from accumulate(
            $resEvent: ReservationEvent(
                userId == $userId,
                restaurantId == $restaurantId,
                $numOfPersons == numOfPersons
            ) over window:time(60m),
            count($resEvent)
        )
    then
        System.out.println("CEP --> Korisnik pokusava da napravi drugu rezervaciju sa istim restoranom i istim brojem osoba.");
        modify($user) {setBlocked(true)}
        modify($user) {setBlockedDate(new Date())}
end
